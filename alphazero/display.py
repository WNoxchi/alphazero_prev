# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/display.ipynb (unless otherwise specified).

__all__ = ['plot_tree']

# Cell

from  plotly.offline import plot
import chart_studio.plotly as py
import plotly.graph_objs

# Cell

def plot_tree(graph, layout_type='rt_circular'):
    """
    Plots an igraph graph.
    """

    G = graph
    labels = list(G.vs['name'])
    N = len(labels)
    E = [e.tuple for e in G.es]
    layt = G.layout(layout_type)

    Xn=[layt[k][0] for k in range(N)]
    Yn=[layt[k][1] for k in range(N)]
    Xe=[]
    Ye=[]
    for e in E:
        Xe+=[layt[e[0]][0],layt[e[1]][0], None]
        Ye+=[layt[e[0]][1],layt[e[1]][1], None]

    trace1=plotly.graph_objs.Scatter(x=Xe,
                y=Ye,
                mode='lines',
                line= dict(color='rgb(210,210,210)', width=1),
                hoverinfo='none'
                )
    trace2=plotly.graph_objs.Scatter(x=Xn,
                y=Yn,
                mode='markers',
                name='ntw',
                marker=dict(symbol='circle-dot',
                                            size=5,
                                            color='#6959CD',
                                            line=dict(color='rgb(50,50,50)', width=0.5)
                                            ),
                text=None,
                hoverinfo='text'
                )

    axis=dict(showline=False, # hide axis line, grid, ticklabels and  title
            zeroline=False,
            showgrid=False,
            showticklabels=False,
            title=''
            )

    width=800
    height=800
    layout=plotly.graph_objs.Layout(title= "Search Tree",#+\
                #"<br> xyz: <a href='https://tuloy.co'> [1]</a>",
        font= dict(size=12),
        showlegend=False,
        autosize=False,
        width=width,
        height=height,
        xaxis=plotly.graph_objs.layout.XAxis(axis),
        yaxis=plotly.graph_objs.layout.YAxis(axis),
        margin=plotly.graph_objs.layout.Margin(
            l=40,
            r=40,
            b=85,
            t=100,
        ),
        hovermode='closest',
        annotations=[
            dict(
            showarrow=False,
                text=f'{layout_type}',
                xref='paper',
                yref='paper',
                x=0,
                y=-0.1,
                xanchor='left',
                yanchor='bottom',
                font=dict(
                size=14
                )
                )
            ]
        )

    data=[trace1, trace2]
    fig=plotly.graph_objs.Figure(data=data, layout=layout)
    plotly.offline.iplot(fig, filename='igraph-network')